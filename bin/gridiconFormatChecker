#!/usr/bin/env node

var fs = require( 'fs' );
var readline = require( 'readline' );
var validIconSizes = [ 12, 18, 24, 36, 48, 54, 72 ];

var file = process.argv[ 2 ];

function checkGridicons( filename ) {
	var lineNumber = 0,
		result = '';
	readline.createInterface( {
		input: fs.createReadStream( filename ),
		terminal: false
	} ).on( 'line', function( line ) {
		var gridIconProps, onlyAttrs, size, isNonStandard = false;

		if ( line.indexOf( '<Gridicon' ) >= 0 ) {
			gridIconProps = line.split( '<Gridicon' )[ 1 ];
			if ( gridIconProps ) {
				onlyAttrs = gridIconProps.split( '>' )[ 0 ].split( ' ' ).join( '' );
				isNonStandard = onlyAttrs.indexOf( 'nonStandard' ) >= 0;
				if ( onlyAttrs.indexOf( 'size={' ) >= 0 ) {
					size = onlyAttrs.split( 'size={' )[ 1 ].split( '}' )[ 0 ];
					if ( !isNaN( size ) ) {
						if( !isNonStandard && validIconSizes.indexOf( +size ) < 0 ) {
							result += '\033[31mNon-standard gridicon size ( ' + size + 'px ) detected in ' + filename + ' line ' + lineNumber + '\n';
						}
						if( isNonStandard && validIconSizes.indexOf( +size ) >= 0 ) {
							result += '\033[33mStandard size gridicon ( ' + size + 'px ) marked as non-standard... are you sure that is ok? in ' + filename + ' line ' + lineNumber + '\n';
						}
					}
				}
			}
		}
		lineNumber++;
	} ).on( 'close', function() {
		if ( result !== '' ) {
			console.error( result );
			console.log( '\033[mValid gridiconsizes are ' + validIconSizes.join( 'px, ' ) + 'px\n' );
			process.exit( 1 );
		} else {
			process.exit( 0 );
		}
	} );
}

checkGridicons( file );
