#!/usr/bin/env node

/**
 * Module dependencies.
 */

var dirs;
var path = require( 'path' );
var fs = require( 'fs' );
var join = path.join;
var read = fs.readFileSync;
var write = fs.writeFileSync;

var dep = process.argv[2];
var version = process.argv[3];

if ( !dep || !version ) {
	console.log( 'usage:' );
	console.log( '  ' + process.argv.slice( 0, 2 ).join( ' ' ) + ' <dependencyName> <newVersion>' );
	process.exit( 2 ); //eslint-disable-line no-process-exit
}

console.log();
console.log( '  updating %s to %s', dep, version );

dirs = [
	'server',
	'client'
];

function visitPackageFiles( dir, callback ) {
	fs.readdir( dir, function( err, list ) {
		if ( err ) {
			callback( err );
		}

		list.forEach( function( file ) {
			file = join( dir, file );

			if ( /package\.json$/.test( file ) ) {
				callback( null, file );
			}

			fs.stat( file, function( error, stat ) {
				if ( stat && stat.isDirectory() ) {
					visitPackageFiles( file, callback );
				}
			} );
		} );
	} );
}

dirs.forEach( function( dir ) {
	visitPackageFiles( dir, function( err, packageJsonPath ) {
		var conf;
		var json;
		if ( err ) {
			console.log( err );
		}
		try {
			conf = JSON.parse( read( packageJsonPath, 'utf8' ) );
		} catch ( e ) {
			//console.error('skipping %j: %s', name, e);
			return;
		}
		[ 'dependencies', 'devDependencies' ].forEach( function( dependencies ) {
			var curr;
			if ( !conf[dependencies] ) {
				return;
			}
			if ( !conf[dependencies][dep] ) {
				return;
			}
			curr = conf[dependencies][dep];
			console.log( '  updating %j %j %s v%s -> v%s', packageJsonPath, dependencies, dep, curr, version );
			conf[dependencies][dep] = version;
		} );
		json = JSON.stringify( conf, null, 2 );
		write( packageJsonPath, json + '\n' );
	} );
} );
console.log( '' );
